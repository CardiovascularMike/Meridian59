% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Knightshield is Shield

constants:

   include blakston.khd

resources:

   knightshield_name_rsc = "knight's shield"
   knightshield_icon_rsc = mtlshld.bgf
   knightshield_desc_rsc = \
      "Nearly three feet from top to bottom, this glimmering "
      "shield of polished steel is of the highest quality.  "
      "You see the mark of Fehr'loi Qan inscribed on the "
      "wooden handle."

   knightshield_window_overlay_rsc = povshldE.bgf

classvars:

   vrName = knightshield_name_rsc
   vrIcon = knightshield_icon_rsc
   vrDesc = knightshield_desc_rsc

   viHits_init_min = 250
   viHits_init_max = 300

   viValue_average = 800
   viWeight = 175
   viBulk = 200


   vrShield_window_overlay = knightshield_window_overlay_rsc
   vrShield_overlay = knightshield_icon_rsc

   viGround_group = 3
   viInventory_group = 1
   viGood_group = 5
   viMed_group  = 6
   viPoor_group = 7

   viDefense_base = 15
   viDamage_base = 2

properties:

messages:

   GetResistanceModifiers()
   {
      return [ [-ATCK_SPELL_ALL,-20],
               [ATCK_WEAP_PIERCE,10]
             ];
   }


   SendLookAnimation()
   {
      local iHitsPercent;
      iHitsPercent = (100 * piHits) / piHits_init;
      if iHitsPercent > 90
      {
         AddPacket(1,ANIMATE_NONE, 2,viInventory_group);
      }
      else
      {
         % update local bitmap to reflect changing hit % levels for breaking items
         if iHitsPercent > 65
         {
            AddPacket(1,ANIMATE_NONE, 2,viGood_group);
         }
         else
         {
            if iHitsPercent > 30
            {
               AddPacket(1,ANIMATE_NONE, 2,viMed_group);
            }
            else
            {
               if piHits > 0
               {
                  AddPacket(1,ANIMATE_NONE, 2,viPoor_group);
               }
               else
               {
                  AddPacket(1,ANIMATE_NONE, 2,viBroken_group);
               }
            }
         }
      }
      
      return;
   }

   SendInventoryAnimation()
   {
      Send(self,@SendLookAnimation);

      return;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
